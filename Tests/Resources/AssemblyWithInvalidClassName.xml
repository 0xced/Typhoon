<assembly xmlns="http://www.typhoonframework.org/schema/assembly"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.typhoonframework.org/schema/assembly
          http://www.typhoonframework.org/schema/assembly.xsd">

    <description>
        This is the application assembly. The schema declaration above gives code-completion in supported IDEs
        (works in AppCode, but the Xcode XML editor doesn't resolve schemas, it seems).
        Dependencies can be resolved by reference (ie a name), by matching the required type or protocol or by value.
        Dependencies can be declared in any order - Typhoon will work out how to resolve them.
    </description>

    <component class="AClassThatDoesNotExist" key="knight">
        <property name="quest" ref="quest">
            <description>
                Properties can be injected by reference.
            </description>
        </property>
        <property name="damselsRescued" value="12">
            <description>
                Property arguments can also be injected by value. The container will look up the required
                class or primitive type. It's easy to register your own additional converters.
            </description>
        </property>
    </component>


</assembly>
